#!/usr/bin/env python
"""
Controller for various ports operations
"""
def main():
  from port import ports
  from queue import ports_queue
  import make
  import threading

  from logging import getLogger, StreamHandler, DEBUG

  handler = StreamHandler()
  handler.setLevel(DEBUG)
  getLogger('pypkg').addHandler(StreamHandler())
  getLogger('pypkg.port.DependHandler').setLevel(DEBUG)

  make.pre_cmd = ['echo']

  def statistics():
    import queue
    import port
    import sys
    import target
    from time import sleep, time

    st = time()

    count = 0
    while True:
      sleep(1)
      count += 1
      if len(queue.config_queue):
        continue
      stdout = sys.stdout
      sys.stdout = sys.stderr
      if count % 20 == 1:
        print
        print " Seconds | Port Cnt |    Fetch Cnt    |    Build Cnt    |   Install Cnt   "
        print "         |          | Act Queue Total | Act Queue Total | Act Queue Total "
        print "---------+----------+-----------------+-----------------+-----------------"
      print " %7i | %8i | %3i %5i %5i | %3i %5i %5i | %3i %5i %5i " % \
            (int(time() - st), # Seconds
            len(port.ports),  # Port Cnt
            len(queue.fetch_queue), queue.fetch_queue.qsize(), len(target.fetch_builder),
            len(queue.build_queue), queue.build_queue.qsize(), len(target.build_builder),
            len(queue.install_queue), queue.install_queue.qsize(), len(target.install_builder))
      sys.stdout = stdout
      stdout.flush()

  stats = threading.Thread(target=statistics)
  stats.setDaemon(True)
  stats.start()

  port = 'x11/xorg'

  ports.add(port)
  ports_queue.join()

  ports[port].install()

from threading import Thread
from tools import auto_exit, exit_handler #, auto_term

auto_exit(5)
Thread(target=main).start()
exit_handler.run()
